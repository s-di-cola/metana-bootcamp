"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/minimalistic-crypto-utils";
exports.ids = ["vendor-chunks/minimalistic-crypto-utils"];
exports.modules = {

/***/ "(ssr)/./node_modules/minimalistic-crypto-utils/lib/utils.js":
/*!*************************************************************!*\
  !*** ./node_modules/minimalistic-crypto-utils/lib/utils.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nvar utils = exports;\nfunction toArray(msg, enc) {\n    if (Array.isArray(msg)) return msg.slice();\n    if (!msg) return [];\n    var res = [];\n    if (typeof msg !== \"string\") {\n        for(var i = 0; i < msg.length; i++)res[i] = msg[i] | 0;\n        return res;\n    }\n    if (enc === \"hex\") {\n        msg = msg.replace(/[^a-z0-9]+/ig, \"\");\n        if (msg.length % 2 !== 0) msg = \"0\" + msg;\n        for(var i = 0; i < msg.length; i += 2)res.push(parseInt(msg[i] + msg[i + 1], 16));\n    } else {\n        for(var i = 0; i < msg.length; i++){\n            var c = msg.charCodeAt(i);\n            var hi = c >> 8;\n            var lo = c & 0xff;\n            if (hi) res.push(hi, lo);\n            else res.push(lo);\n        }\n    }\n    return res;\n}\nutils.toArray = toArray;\nfunction zero2(word) {\n    if (word.length === 1) return \"0\" + word;\n    else return word;\n}\nutils.zero2 = zero2;\nfunction toHex(msg) {\n    var res = \"\";\n    for(var i = 0; i < msg.length; i++)res += zero2(msg[i].toString(16));\n    return res;\n}\nutils.toHex = toHex;\nutils.encode = function encode(arr, enc) {\n    if (enc === \"hex\") return toHex(arr);\n    else return arr;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWluaW1hbGlzdGljLWNyeXB0by11dGlscy9saWIvdXRpbHMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQSxJQUFJQSxRQUFRQztBQUVaLFNBQVNDLFFBQVFDLEdBQUcsRUFBRUMsR0FBRztJQUN2QixJQUFJQyxNQUFNQyxPQUFPLENBQUNILE1BQ2hCLE9BQU9BLElBQUlJLEtBQUs7SUFDbEIsSUFBSSxDQUFDSixLQUNILE9BQU8sRUFBRTtJQUNYLElBQUlLLE1BQU0sRUFBRTtJQUNaLElBQUksT0FBT0wsUUFBUSxVQUFVO1FBQzNCLElBQUssSUFBSU0sSUFBSSxHQUFHQSxJQUFJTixJQUFJTyxNQUFNLEVBQUVELElBQzlCRCxHQUFHLENBQUNDLEVBQUUsR0FBR04sR0FBRyxDQUFDTSxFQUFFLEdBQUc7UUFDcEIsT0FBT0Q7SUFDVDtJQUNBLElBQUlKLFFBQVEsT0FBTztRQUNqQkQsTUFBTUEsSUFBSVEsT0FBTyxDQUFDLGdCQUFnQjtRQUNsQyxJQUFJUixJQUFJTyxNQUFNLEdBQUcsTUFBTSxHQUNyQlAsTUFBTSxNQUFNQTtRQUNkLElBQUssSUFBSU0sSUFBSSxHQUFHQSxJQUFJTixJQUFJTyxNQUFNLEVBQUVELEtBQUssRUFDbkNELElBQUlJLElBQUksQ0FBQ0MsU0FBU1YsR0FBRyxDQUFDTSxFQUFFLEdBQUdOLEdBQUcsQ0FBQ00sSUFBSSxFQUFFLEVBQUU7SUFDM0MsT0FBTztRQUNMLElBQUssSUFBSUEsSUFBSSxHQUFHQSxJQUFJTixJQUFJTyxNQUFNLEVBQUVELElBQUs7WUFDbkMsSUFBSUssSUFBSVgsSUFBSVksVUFBVSxDQUFDTjtZQUN2QixJQUFJTyxLQUFLRixLQUFLO1lBQ2QsSUFBSUcsS0FBS0gsSUFBSTtZQUNiLElBQUlFLElBQ0ZSLElBQUlJLElBQUksQ0FBQ0ksSUFBSUM7aUJBRWJULElBQUlJLElBQUksQ0FBQ0s7UUFDYjtJQUNGO0lBQ0EsT0FBT1Q7QUFDVDtBQUNBUixNQUFNRSxPQUFPLEdBQUdBO0FBRWhCLFNBQVNnQixNQUFNQyxJQUFJO0lBQ2pCLElBQUlBLEtBQUtULE1BQU0sS0FBSyxHQUNsQixPQUFPLE1BQU1TO1NBRWIsT0FBT0E7QUFDWDtBQUNBbkIsTUFBTWtCLEtBQUssR0FBR0E7QUFFZCxTQUFTRSxNQUFNakIsR0FBRztJQUNoQixJQUFJSyxNQUFNO0lBQ1YsSUFBSyxJQUFJQyxJQUFJLEdBQUdBLElBQUlOLElBQUlPLE1BQU0sRUFBRUQsSUFDOUJELE9BQU9VLE1BQU1mLEdBQUcsQ0FBQ00sRUFBRSxDQUFDWSxRQUFRLENBQUM7SUFDL0IsT0FBT2I7QUFDVDtBQUNBUixNQUFNb0IsS0FBSyxHQUFHQTtBQUVkcEIsTUFBTXNCLE1BQU0sR0FBRyxTQUFTQSxPQUFPQyxHQUFHLEVBQUVuQixHQUFHO0lBQ3JDLElBQUlBLFFBQVEsT0FDVixPQUFPZ0IsTUFBTUc7U0FFYixPQUFPQTtBQUNYIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHNlLTIvbmV4dGpzLy4vbm9kZV9tb2R1bGVzL21pbmltYWxpc3RpYy1jcnlwdG8tdXRpbHMvbGliL3V0aWxzLmpzPzM4YzMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSBleHBvcnRzO1xuXG5mdW5jdGlvbiB0b0FycmF5KG1zZywgZW5jKSB7XG4gIGlmIChBcnJheS5pc0FycmF5KG1zZykpXG4gICAgcmV0dXJuIG1zZy5zbGljZSgpO1xuICBpZiAoIW1zZylcbiAgICByZXR1cm4gW107XG4gIHZhciByZXMgPSBbXTtcbiAgaWYgKHR5cGVvZiBtc2cgIT09ICdzdHJpbmcnKSB7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBtc2cubGVuZ3RoOyBpKyspXG4gICAgICByZXNbaV0gPSBtc2dbaV0gfCAwO1xuICAgIHJldHVybiByZXM7XG4gIH1cbiAgaWYgKGVuYyA9PT0gJ2hleCcpIHtcbiAgICBtc2cgPSBtc2cucmVwbGFjZSgvW15hLXowLTldKy9pZywgJycpO1xuICAgIGlmIChtc2cubGVuZ3RoICUgMiAhPT0gMClcbiAgICAgIG1zZyA9ICcwJyArIG1zZztcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IG1zZy5sZW5ndGg7IGkgKz0gMilcbiAgICAgIHJlcy5wdXNoKHBhcnNlSW50KG1zZ1tpXSArIG1zZ1tpICsgMV0sIDE2KSk7XG4gIH0gZWxzZSB7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBtc2cubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBjID0gbXNnLmNoYXJDb2RlQXQoaSk7XG4gICAgICB2YXIgaGkgPSBjID4+IDg7XG4gICAgICB2YXIgbG8gPSBjICYgMHhmZjtcbiAgICAgIGlmIChoaSlcbiAgICAgICAgcmVzLnB1c2goaGksIGxvKTtcbiAgICAgIGVsc2VcbiAgICAgICAgcmVzLnB1c2gobG8pO1xuICAgIH1cbiAgfVxuICByZXR1cm4gcmVzO1xufVxudXRpbHMudG9BcnJheSA9IHRvQXJyYXk7XG5cbmZ1bmN0aW9uIHplcm8yKHdvcmQpIHtcbiAgaWYgKHdvcmQubGVuZ3RoID09PSAxKVxuICAgIHJldHVybiAnMCcgKyB3b3JkO1xuICBlbHNlXG4gICAgcmV0dXJuIHdvcmQ7XG59XG51dGlscy56ZXJvMiA9IHplcm8yO1xuXG5mdW5jdGlvbiB0b0hleChtc2cpIHtcbiAgdmFyIHJlcyA9ICcnO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IG1zZy5sZW5ndGg7IGkrKylcbiAgICByZXMgKz0gemVybzIobXNnW2ldLnRvU3RyaW5nKDE2KSk7XG4gIHJldHVybiByZXM7XG59XG51dGlscy50b0hleCA9IHRvSGV4O1xuXG51dGlscy5lbmNvZGUgPSBmdW5jdGlvbiBlbmNvZGUoYXJyLCBlbmMpIHtcbiAgaWYgKGVuYyA9PT0gJ2hleCcpXG4gICAgcmV0dXJuIHRvSGV4KGFycik7XG4gIGVsc2VcbiAgICByZXR1cm4gYXJyO1xufTtcbiJdLCJuYW1lcyI6WyJ1dGlscyIsImV4cG9ydHMiLCJ0b0FycmF5IiwibXNnIiwiZW5jIiwiQXJyYXkiLCJpc0FycmF5Iiwic2xpY2UiLCJyZXMiLCJpIiwibGVuZ3RoIiwicmVwbGFjZSIsInB1c2giLCJwYXJzZUludCIsImMiLCJjaGFyQ29kZUF0IiwiaGkiLCJsbyIsInplcm8yIiwid29yZCIsInRvSGV4IiwidG9TdHJpbmciLCJlbmNvZGUiLCJhcnIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/minimalistic-crypto-utils/lib/utils.js\n");

/***/ })

};
;